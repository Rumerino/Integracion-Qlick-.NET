@model eSmash.Models.UserAccounts

@{
    ViewBag.Title = "appAccount";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}


<style>
    #titulo {
        color: red;
        font-family: Trebuchet;
         letter-spacing:0.1em;
         text-align:center;

         line-height: 145%;
         font-size: 14pt;
    }

    #desc {
       color: grey;
       font-family:Trebuchet;
       font-size:14px;
       letter-spacing:0.1em;
       line-height:200%;
       padding-top:11px;
    }

    #nombre {
        color: black;
        font-family: Trebuchet;
        font-size: 110%;
        margin-top: 5%;
        width: 100%;
    }

    .offdiv {
        /*border: 1px solid #808080;*/ /* Color del borde, debe ser más oscuro que fondo */
        margin-top: 10%;
        background: rgb(245, 245, 245); /* Fondo */
        /*border-radius: 6px; Bordes redondos */
        box-shadow: inset 3px 3px 3px rgba(255,255,255,.7), inset -2px -2px 3px rgba(0,0,0,.1), 2px 2px 10px rgba(0,0,0,.1);
        text-shadow: 1px 1px 1px rgba(255,255,255,.9); /* Sombra del texto */
        text-align: center;
    }

    .on {
        background: rgb(245, 245, 245); /* Fondo más oscuro que el original */
        box-shadow: inset 4px 4px 4px rgba(0,0,0,.3), inset -3px -3px 3px rgba(255,255,255,.2);
    }
</style>
<img style="width:400px" src="~/content/image/esmash.png" />
<div class="row" style="margin-bottom:3%">
    <form name="contractform" novalidate style="margin-left: 35%; " hidden>

        <div class="col-sm-4">
            <label for="tipe">Button Mode: </label>
            <input id="buton" type="checkbox" name="my-checkbox" onchange="changeInput()" checked>
        </div>
    </form>
</div>
<p hidden id="idUser">@Html.DisplayFor(model => model.id)</p>
    <div id="option1" class="row">
        @foreach (var item in Model.acounts)
        {

            <div class="col-lg-3 col-sm-6 col-md-3">
                
                <div id="@item.idDiv" onmouseout="out(@item.idAction)" onmouseover="over(@item.idAction)" onclick="clik(@item.idAction)" class="offdiv">
                    <p id="titulo">@Html.DisplayFor(modelItem => item.titulo)</p>
                    <p id="desc">@Html.DisplayFor(modelItem => item.descripcion)</p>
                    <p id="nombre"><b>@Html.DisplayFor(modelItem => item.nombre)</b></p>
                    
                </div>
            </div>

        }

    </div>
<div role="tabpanel" class="tab-pane fade in active" id="option2" style="display:none">
    <br />
    <div  class="table-responsive">

        <table class="table table-striped table-bordered table-rounded" id="report_list">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.acounts)
                {
                    <tr>
                        <td nowrap>@Html.DisplayFor(modelItem => item.titulo)</td>
                        <td>@Html.DisplayFor(modelItem => item.descripcion)</td>
                        <td>@Html.DisplayFor(modelItem => item.nombre)</td>
                        <td class="text-center">
                            <a href="@Url.Action("", new { id=item.id })" target="_blank"><span data-toggle="tooltip" data-placement="top" title="Download"><i class="glyphicon glyphicon-arrow-down"></i></span></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

    <script>


        var oTable = $('#report_list').DataTable({
            'aoColumnDefs': [{
                'bSortable': false,
                'aTargets': ['nosort'],
            }, {
                "render": function (data, type, row) {
                    return data.split(' ')[0];
                },
                "targets": 2
            }, {
                "render": function (data, type, row) {
                    return data.split(' ')[0];
                },
                "targets": 3
            }]
        });

        $("[name='my-checkbox']").bootstrapSwitch();

        $('#name').keyup(function () {
            oTable.columns(2).search($(this).val()).draw();
        });

            function over(n) {
                var id = "#buttondiv" + n
                $(id).removeClass("off").addClass("on");
            }

            function out(n) {
                var id = "#buttondiv" + n
                $(id).removeClass("on").addClass("off");
            }

            function clik(n) {
                @*var idUser = $("#idUser").text();
                console.debug(idUser)
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("Index", "Qlik")",
                    data: { idAcc: n, idUsr: idUser },
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (data) {
                    $('body').html(data);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                },
                traditional: true
                });*@
                //window.location.href = "/qlik/index"
                window.location.href = "/eSmashNew/qlik/index"
            }

            $("#buttondiv").mouseover(function () {
                $("#buttondiv").removeClass("off").addClass("on");

            });

            $("#buttondiv").mouseout(function () {
                $("#buttondiv").removeClass("on").addClass("off");
            });


            function changeInput() {
                if (document.getElementById("buton").checked == true) {
                    $('#option1').show()
                    document.getElementById("option2").style.display = 'none';
                } else {
                    $('#option2').show()
                    document.getElementById("option1").style.display = 'none';
                }
            }

    </script>
